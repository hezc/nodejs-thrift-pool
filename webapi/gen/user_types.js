//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = module.exports = {};
User = module.exports.User = function(args) {
  this._id = null;
  this.name = null;
  this.mobile = null;
  this.loginname = null;
  this.password = null;
  this.gender = null;
  this.profile_image_url = null;
  this.is_block = false;
  this.blocktime = null;
  this.score = 0;
  this.topic_count = 0;
  this.reply_count = 0;
  this.question_count = 0;
  this.accept_count = 0;
  this.is_star = null;
  this.level = null;
  this.edu_province = null;
  this.edu_city = null;
  this.edu_area = null;
  this.province_id = null;
  this.city_id = null;
  this.area_id = null;
  this.edu_school = null;
  this.edu_grade_id = null;
  this.edu_grade = null;
  this.edu_class = null;
  this.token_valid = null;
  this.sys_type = 0;
  this.invite_code = null;
  this.invited_code = null;
  this.channel = null;
  this.invite_code_times = 0;
  this.create_at = null;
  this.update_at = null;
  this.version = null;
  this.is_bind = null;
  this.is_mobilebind = false;
  this.deviceid = null;
  this.pushtoken = null;
  this.phone_type = null;
  this.push_server = null;
  this.is_info_complete = false;
  this.is_loginname_set = false;
  this.salt_code = null;
  this.is_lock_pass = false;
  this.lock_pass_time = 0;
  this.pass_wrong_num = 0;
  this.email = null;
  this.reg_type = 'email_web';
  this.url = null;
  this.location = null;
  this.signature = null;
  this.profile = null;
  this.weibo = null;
  this.avatar = null;
  this.githubId = null;
  this.active = true;
  this.githubUsername = null;
  this.follower_count = 0;
  this.following_count = 0;
  this.collect_tag_count = 0;
  this.collect_topic_count = 0;
  this.receive_reply_mail = false;
  this.receive_at_mail = false;
  this.from_wp = null;
  this.retrieve_time = null;
  this.retrieve_key = null;
  this.vip_type = null;
  this.vip_create_time = null;
  this.vip_expire_time = null;
  this.operate_type = null;
  if (args) {
    if (args._id !== undefined) {
      this._id = args._id;
    }
    if (args.name !== undefined) {
      this.name = args.name;
    }
    if (args.mobile !== undefined) {
      this.mobile = args.mobile;
    }
    if (args.loginname !== undefined) {
      this.loginname = args.loginname;
    }
    if (args.password !== undefined) {
      this.password = args.password;
    }
    if (args.gender !== undefined) {
      this.gender = args.gender;
    }
    if (args.profile_image_url !== undefined) {
      this.profile_image_url = args.profile_image_url;
    }
    if (args.is_block !== undefined) {
      this.is_block = args.is_block;
    }
    if (args.blocktime !== undefined) {
      this.blocktime = args.blocktime;
    }
    if (args.score !== undefined) {
      this.score = args.score;
    }
    if (args.topic_count !== undefined) {
      this.topic_count = args.topic_count;
    }
    if (args.reply_count !== undefined) {
      this.reply_count = args.reply_count;
    }
    if (args.question_count !== undefined) {
      this.question_count = args.question_count;
    }
    if (args.accept_count !== undefined) {
      this.accept_count = args.accept_count;
    }
    if (args.is_star !== undefined) {
      this.is_star = args.is_star;
    }
    if (args.level !== undefined) {
      this.level = args.level;
    }
    if (args.edu_province !== undefined) {
      this.edu_province = args.edu_province;
    }
    if (args.edu_city !== undefined) {
      this.edu_city = args.edu_city;
    }
    if (args.edu_area !== undefined) {
      this.edu_area = args.edu_area;
    }
    if (args.province_id !== undefined) {
      this.province_id = args.province_id;
    }
    if (args.city_id !== undefined) {
      this.city_id = args.city_id;
    }
    if (args.area_id !== undefined) {
      this.area_id = args.area_id;
    }
    if (args.edu_school !== undefined) {
      this.edu_school = args.edu_school;
    }
    if (args.edu_grade_id !== undefined) {
      this.edu_grade_id = args.edu_grade_id;
    }
    if (args.edu_grade !== undefined) {
      this.edu_grade = args.edu_grade;
    }
    if (args.edu_class !== undefined) {
      this.edu_class = args.edu_class;
    }
    if (args.token_valid !== undefined) {
      this.token_valid = args.token_valid;
    }
    if (args.sys_type !== undefined) {
      this.sys_type = args.sys_type;
    }
    if (args.invite_code !== undefined) {
      this.invite_code = args.invite_code;
    }
    if (args.invited_code !== undefined) {
      this.invited_code = args.invited_code;
    }
    if (args.channel !== undefined) {
      this.channel = args.channel;
    }
    if (args.invite_code_times !== undefined) {
      this.invite_code_times = args.invite_code_times;
    }
    if (args.create_at !== undefined) {
      this.create_at = args.create_at;
    }
    if (args.update_at !== undefined) {
      this.update_at = args.update_at;
    }
    if (args.version !== undefined) {
      this.version = args.version;
    }
    if (args.is_bind !== undefined) {
      this.is_bind = args.is_bind;
    }
    if (args.is_mobilebind !== undefined) {
      this.is_mobilebind = args.is_mobilebind;
    }
    if (args.deviceid !== undefined) {
      this.deviceid = args.deviceid;
    }
    if (args.pushtoken !== undefined) {
      this.pushtoken = args.pushtoken;
    }
    if (args.phone_type !== undefined) {
      this.phone_type = args.phone_type;
    }
    if (args.push_server !== undefined) {
      this.push_server = args.push_server;
    }
    if (args.is_info_complete !== undefined) {
      this.is_info_complete = args.is_info_complete;
    }
    if (args.is_loginname_set !== undefined) {
      this.is_loginname_set = args.is_loginname_set;
    }
    if (args.salt_code !== undefined) {
      this.salt_code = args.salt_code;
    }
    if (args.is_lock_pass !== undefined) {
      this.is_lock_pass = args.is_lock_pass;
    }
    if (args.lock_pass_time !== undefined) {
      this.lock_pass_time = args.lock_pass_time;
    }
    if (args.pass_wrong_num !== undefined) {
      this.pass_wrong_num = args.pass_wrong_num;
    }
    if (args.email !== undefined) {
      this.email = args.email;
    }
    if (args.reg_type !== undefined) {
      this.reg_type = args.reg_type;
    }
    if (args.url !== undefined) {
      this.url = args.url;
    }
    if (args.location !== undefined) {
      this.location = args.location;
    }
    if (args.signature !== undefined) {
      this.signature = args.signature;
    }
    if (args.profile !== undefined) {
      this.profile = args.profile;
    }
    if (args.weibo !== undefined) {
      this.weibo = args.weibo;
    }
    if (args.avatar !== undefined) {
      this.avatar = args.avatar;
    }
    if (args.githubId !== undefined) {
      this.githubId = args.githubId;
    }
    if (args.active !== undefined) {
      this.active = args.active;
    }
    if (args.githubUsername !== undefined) {
      this.githubUsername = args.githubUsername;
    }
    if (args.follower_count !== undefined) {
      this.follower_count = args.follower_count;
    }
    if (args.following_count !== undefined) {
      this.following_count = args.following_count;
    }
    if (args.collect_tag_count !== undefined) {
      this.collect_tag_count = args.collect_tag_count;
    }
    if (args.collect_topic_count !== undefined) {
      this.collect_topic_count = args.collect_topic_count;
    }
    if (args.receive_reply_mail !== undefined) {
      this.receive_reply_mail = args.receive_reply_mail;
    }
    if (args.receive_at_mail !== undefined) {
      this.receive_at_mail = args.receive_at_mail;
    }
    if (args.from_wp !== undefined) {
      this.from_wp = args.from_wp;
    }
    if (args.retrieve_time !== undefined) {
      this.retrieve_time = args.retrieve_time;
    }
    if (args.retrieve_key !== undefined) {
      this.retrieve_key = args.retrieve_key;
    }
    if (args.vip_type !== undefined) {
      this.vip_type = args.vip_type;
    }
    if (args.vip_create_time !== undefined) {
      this.vip_create_time = args.vip_create_time;
    }
    if (args.vip_expire_time !== undefined) {
      this.vip_expire_time = args.vip_expire_time;
    }
    if (args.operate_type !== undefined) {
      this.operate_type = args.operate_type;
    }
  }
};
User.prototype = {};
User.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this._id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.mobile = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.loginname = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.password = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I32) {
        this.gender = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.STRING) {
        this.profile_image_url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.BOOL) {
        this.is_block = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.I32) {
        this.blocktime = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.I32) {
        this.score = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.I32) {
        this.topic_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 12:
      if (ftype == Thrift.Type.I32) {
        this.reply_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 13:
      if (ftype == Thrift.Type.I32) {
        this.question_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 14:
      if (ftype == Thrift.Type.I32) {
        this.accept_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 15:
      if (ftype == Thrift.Type.BOOL) {
        this.is_star = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 16:
      if (ftype == Thrift.Type.STRING) {
        this.level = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 17:
      if (ftype == Thrift.Type.STRING) {
        this.edu_province = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 18:
      if (ftype == Thrift.Type.STRING) {
        this.edu_city = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 19:
      if (ftype == Thrift.Type.STRING) {
        this.edu_area = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 20:
      if (ftype == Thrift.Type.I32) {
        this.province_id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 21:
      if (ftype == Thrift.Type.I32) {
        this.city_id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 22:
      if (ftype == Thrift.Type.I32) {
        this.area_id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 23:
      if (ftype == Thrift.Type.STRING) {
        this.edu_school = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 24:
      if (ftype == Thrift.Type.I32) {
        this.edu_grade_id = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 25:
      if (ftype == Thrift.Type.STRING) {
        this.edu_grade = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 26:
      if (ftype == Thrift.Type.STRING) {
        this.edu_class = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 27:
      if (ftype == Thrift.Type.I64) {
        this.token_valid = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 28:
      if (ftype == Thrift.Type.I32) {
        this.sys_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 29:
      if (ftype == Thrift.Type.STRING) {
        this.invite_code = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 30:
      if (ftype == Thrift.Type.STRING) {
        this.invited_code = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 31:
      if (ftype == Thrift.Type.STRING) {
        this.channel = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 32:
      if (ftype == Thrift.Type.I32) {
        this.invite_code_times = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 33:
      if (ftype == Thrift.Type.I64) {
        this.create_at = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 34:
      if (ftype == Thrift.Type.I64) {
        this.update_at = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 35:
      if (ftype == Thrift.Type.STRING) {
        this.version = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 36:
      if (ftype == Thrift.Type.BOOL) {
        this.is_bind = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 37:
      if (ftype == Thrift.Type.BOOL) {
        this.is_mobilebind = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 38:
      if (ftype == Thrift.Type.STRING) {
        this.deviceid = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 39:
      if (ftype == Thrift.Type.STRING) {
        this.pushtoken = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 40:
      if (ftype == Thrift.Type.I32) {
        this.phone_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 41:
      if (ftype == Thrift.Type.STRING) {
        this.push_server = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 42:
      if (ftype == Thrift.Type.BOOL) {
        this.is_info_complete = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 43:
      if (ftype == Thrift.Type.BOOL) {
        this.is_loginname_set = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 44:
      if (ftype == Thrift.Type.STRING) {
        this.salt_code = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 45:
      if (ftype == Thrift.Type.BOOL) {
        this.is_lock_pass = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 46:
      if (ftype == Thrift.Type.I32) {
        this.lock_pass_time = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 47:
      if (ftype == Thrift.Type.I32) {
        this.pass_wrong_num = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 48:
      if (ftype == Thrift.Type.STRING) {
        this.email = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 49:
      if (ftype == Thrift.Type.STRING) {
        this.reg_type = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 50:
      if (ftype == Thrift.Type.STRING) {
        this.url = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 51:
      if (ftype == Thrift.Type.STRING) {
        this.location = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 52:
      if (ftype == Thrift.Type.STRING) {
        this.signature = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 53:
      if (ftype == Thrift.Type.STRING) {
        this.profile = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 54:
      if (ftype == Thrift.Type.STRING) {
        this.weibo = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 55:
      if (ftype == Thrift.Type.STRING) {
        this.avatar = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 56:
      if (ftype == Thrift.Type.STRING) {
        this.githubId = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 57:
      if (ftype == Thrift.Type.BOOL) {
        this.active = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 58:
      if (ftype == Thrift.Type.STRING) {
        this.githubUsername = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 59:
      if (ftype == Thrift.Type.I32) {
        this.follower_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 60:
      if (ftype == Thrift.Type.I32) {
        this.following_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 61:
      if (ftype == Thrift.Type.I32) {
        this.collect_tag_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 62:
      if (ftype == Thrift.Type.I32) {
        this.collect_topic_count = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 63:
      if (ftype == Thrift.Type.BOOL) {
        this.receive_reply_mail = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 64:
      if (ftype == Thrift.Type.BOOL) {
        this.receive_at_mail = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 65:
      if (ftype == Thrift.Type.BOOL) {
        this.from_wp = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      case 66:
      if (ftype == Thrift.Type.I32) {
        this.retrieve_time = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 67:
      if (ftype == Thrift.Type.STRING) {
        this.retrieve_key = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 68:
      if (ftype == Thrift.Type.I32) {
        this.vip_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 69:
      if (ftype == Thrift.Type.I64) {
        this.vip_create_time = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 70:
      if (ftype == Thrift.Type.I64) {
        this.vip_expire_time = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 71:
      if (ftype == Thrift.Type.I32) {
        this.operate_type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

User.prototype.write = function(output) {
  output.writeStructBegin('User');
  if (this._id !== null && this._id !== undefined) {
    output.writeFieldBegin('_id', Thrift.Type.STRING, 1);
    output.writeString(this._id);
    output.writeFieldEnd();
  }
  if (this.name !== null && this.name !== undefined) {
    output.writeFieldBegin('name', Thrift.Type.STRING, 2);
    output.writeString(this.name);
    output.writeFieldEnd();
  }
  if (this.mobile !== null && this.mobile !== undefined) {
    output.writeFieldBegin('mobile', Thrift.Type.STRING, 3);
    output.writeString(this.mobile);
    output.writeFieldEnd();
  }
  if (this.loginname !== null && this.loginname !== undefined) {
    output.writeFieldBegin('loginname', Thrift.Type.STRING, 4);
    output.writeString(this.loginname);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.STRING, 5);
    output.writeString(this.password);
    output.writeFieldEnd();
  }
  if (this.gender !== null && this.gender !== undefined) {
    output.writeFieldBegin('gender', Thrift.Type.I32, 6);
    output.writeI32(this.gender);
    output.writeFieldEnd();
  }
  if (this.profile_image_url !== null && this.profile_image_url !== undefined) {
    output.writeFieldBegin('profile_image_url', Thrift.Type.STRING, 7);
    output.writeString(this.profile_image_url);
    output.writeFieldEnd();
  }
  if (this.is_block !== null && this.is_block !== undefined) {
    output.writeFieldBegin('is_block', Thrift.Type.BOOL, 8);
    output.writeBool(this.is_block);
    output.writeFieldEnd();
  }
  if (this.blocktime !== null && this.blocktime !== undefined) {
    output.writeFieldBegin('blocktime', Thrift.Type.I32, 9);
    output.writeI32(this.blocktime);
    output.writeFieldEnd();
  }
  if (this.score !== null && this.score !== undefined) {
    output.writeFieldBegin('score', Thrift.Type.I32, 10);
    output.writeI32(this.score);
    output.writeFieldEnd();
  }
  if (this.topic_count !== null && this.topic_count !== undefined) {
    output.writeFieldBegin('topic_count', Thrift.Type.I32, 11);
    output.writeI32(this.topic_count);
    output.writeFieldEnd();
  }
  if (this.reply_count !== null && this.reply_count !== undefined) {
    output.writeFieldBegin('reply_count', Thrift.Type.I32, 12);
    output.writeI32(this.reply_count);
    output.writeFieldEnd();
  }
  if (this.question_count !== null && this.question_count !== undefined) {
    output.writeFieldBegin('question_count', Thrift.Type.I32, 13);
    output.writeI32(this.question_count);
    output.writeFieldEnd();
  }
  if (this.accept_count !== null && this.accept_count !== undefined) {
    output.writeFieldBegin('accept_count', Thrift.Type.I32, 14);
    output.writeI32(this.accept_count);
    output.writeFieldEnd();
  }
  if (this.is_star !== null && this.is_star !== undefined) {
    output.writeFieldBegin('is_star', Thrift.Type.BOOL, 15);
    output.writeBool(this.is_star);
    output.writeFieldEnd();
  }
  if (this.level !== null && this.level !== undefined) {
    output.writeFieldBegin('level', Thrift.Type.STRING, 16);
    output.writeString(this.level);
    output.writeFieldEnd();
  }
  if (this.edu_province !== null && this.edu_province !== undefined) {
    output.writeFieldBegin('edu_province', Thrift.Type.STRING, 17);
    output.writeString(this.edu_province);
    output.writeFieldEnd();
  }
  if (this.edu_city !== null && this.edu_city !== undefined) {
    output.writeFieldBegin('edu_city', Thrift.Type.STRING, 18);
    output.writeString(this.edu_city);
    output.writeFieldEnd();
  }
  if (this.edu_area !== null && this.edu_area !== undefined) {
    output.writeFieldBegin('edu_area', Thrift.Type.STRING, 19);
    output.writeString(this.edu_area);
    output.writeFieldEnd();
  }
  if (this.province_id !== null && this.province_id !== undefined) {
    output.writeFieldBegin('province_id', Thrift.Type.I32, 20);
    output.writeI32(this.province_id);
    output.writeFieldEnd();
  }
  if (this.city_id !== null && this.city_id !== undefined) {
    output.writeFieldBegin('city_id', Thrift.Type.I32, 21);
    output.writeI32(this.city_id);
    output.writeFieldEnd();
  }
  if (this.area_id !== null && this.area_id !== undefined) {
    output.writeFieldBegin('area_id', Thrift.Type.I32, 22);
    output.writeI32(this.area_id);
    output.writeFieldEnd();
  }
  if (this.edu_school !== null && this.edu_school !== undefined) {
    output.writeFieldBegin('edu_school', Thrift.Type.STRING, 23);
    output.writeString(this.edu_school);
    output.writeFieldEnd();
  }
  if (this.edu_grade_id !== null && this.edu_grade_id !== undefined) {
    output.writeFieldBegin('edu_grade_id', Thrift.Type.I32, 24);
    output.writeI32(this.edu_grade_id);
    output.writeFieldEnd();
  }
  if (this.edu_grade !== null && this.edu_grade !== undefined) {
    output.writeFieldBegin('edu_grade', Thrift.Type.STRING, 25);
    output.writeString(this.edu_grade);
    output.writeFieldEnd();
  }
  if (this.edu_class !== null && this.edu_class !== undefined) {
    output.writeFieldBegin('edu_class', Thrift.Type.STRING, 26);
    output.writeString(this.edu_class);
    output.writeFieldEnd();
  }
  if (this.token_valid !== null && this.token_valid !== undefined) {
    output.writeFieldBegin('token_valid', Thrift.Type.I64, 27);
    output.writeI64(this.token_valid);
    output.writeFieldEnd();
  }
  if (this.sys_type !== null && this.sys_type !== undefined) {
    output.writeFieldBegin('sys_type', Thrift.Type.I32, 28);
    output.writeI32(this.sys_type);
    output.writeFieldEnd();
  }
  if (this.invite_code !== null && this.invite_code !== undefined) {
    output.writeFieldBegin('invite_code', Thrift.Type.STRING, 29);
    output.writeString(this.invite_code);
    output.writeFieldEnd();
  }
  if (this.invited_code !== null && this.invited_code !== undefined) {
    output.writeFieldBegin('invited_code', Thrift.Type.STRING, 30);
    output.writeString(this.invited_code);
    output.writeFieldEnd();
  }
  if (this.channel !== null && this.channel !== undefined) {
    output.writeFieldBegin('channel', Thrift.Type.STRING, 31);
    output.writeString(this.channel);
    output.writeFieldEnd();
  }
  if (this.invite_code_times !== null && this.invite_code_times !== undefined) {
    output.writeFieldBegin('invite_code_times', Thrift.Type.I32, 32);
    output.writeI32(this.invite_code_times);
    output.writeFieldEnd();
  }
  if (this.create_at !== null && this.create_at !== undefined) {
    output.writeFieldBegin('create_at', Thrift.Type.I64, 33);
    output.writeI64(this.create_at);
    output.writeFieldEnd();
  }
  if (this.update_at !== null && this.update_at !== undefined) {
    output.writeFieldBegin('update_at', Thrift.Type.I64, 34);
    output.writeI64(this.update_at);
    output.writeFieldEnd();
  }
  if (this.version !== null && this.version !== undefined) {
    output.writeFieldBegin('version', Thrift.Type.STRING, 35);
    output.writeString(this.version);
    output.writeFieldEnd();
  }
  if (this.is_bind !== null && this.is_bind !== undefined) {
    output.writeFieldBegin('is_bind', Thrift.Type.BOOL, 36);
    output.writeBool(this.is_bind);
    output.writeFieldEnd();
  }
  if (this.is_mobilebind !== null && this.is_mobilebind !== undefined) {
    output.writeFieldBegin('is_mobilebind', Thrift.Type.BOOL, 37);
    output.writeBool(this.is_mobilebind);
    output.writeFieldEnd();
  }
  if (this.deviceid !== null && this.deviceid !== undefined) {
    output.writeFieldBegin('deviceid', Thrift.Type.STRING, 38);
    output.writeString(this.deviceid);
    output.writeFieldEnd();
  }
  if (this.pushtoken !== null && this.pushtoken !== undefined) {
    output.writeFieldBegin('pushtoken', Thrift.Type.STRING, 39);
    output.writeString(this.pushtoken);
    output.writeFieldEnd();
  }
  if (this.phone_type !== null && this.phone_type !== undefined) {
    output.writeFieldBegin('phone_type', Thrift.Type.I32, 40);
    output.writeI32(this.phone_type);
    output.writeFieldEnd();
  }
  if (this.push_server !== null && this.push_server !== undefined) {
    output.writeFieldBegin('push_server', Thrift.Type.STRING, 41);
    output.writeString(this.push_server);
    output.writeFieldEnd();
  }
  if (this.is_info_complete !== null && this.is_info_complete !== undefined) {
    output.writeFieldBegin('is_info_complete', Thrift.Type.BOOL, 42);
    output.writeBool(this.is_info_complete);
    output.writeFieldEnd();
  }
  if (this.is_loginname_set !== null && this.is_loginname_set !== undefined) {
    output.writeFieldBegin('is_loginname_set', Thrift.Type.BOOL, 43);
    output.writeBool(this.is_loginname_set);
    output.writeFieldEnd();
  }
  if (this.salt_code !== null && this.salt_code !== undefined) {
    output.writeFieldBegin('salt_code', Thrift.Type.STRING, 44);
    output.writeString(this.salt_code);
    output.writeFieldEnd();
  }
  if (this.is_lock_pass !== null && this.is_lock_pass !== undefined) {
    output.writeFieldBegin('is_lock_pass', Thrift.Type.BOOL, 45);
    output.writeBool(this.is_lock_pass);
    output.writeFieldEnd();
  }
  if (this.lock_pass_time !== null && this.lock_pass_time !== undefined) {
    output.writeFieldBegin('lock_pass_time', Thrift.Type.I32, 46);
    output.writeI32(this.lock_pass_time);
    output.writeFieldEnd();
  }
  if (this.pass_wrong_num !== null && this.pass_wrong_num !== undefined) {
    output.writeFieldBegin('pass_wrong_num', Thrift.Type.I32, 47);
    output.writeI32(this.pass_wrong_num);
    output.writeFieldEnd();
  }
  if (this.email !== null && this.email !== undefined) {
    output.writeFieldBegin('email', Thrift.Type.STRING, 48);
    output.writeString(this.email);
    output.writeFieldEnd();
  }
  if (this.reg_type !== null && this.reg_type !== undefined) {
    output.writeFieldBegin('reg_type', Thrift.Type.STRING, 49);
    output.writeString(this.reg_type);
    output.writeFieldEnd();
  }
  if (this.url !== null && this.url !== undefined) {
    output.writeFieldBegin('url', Thrift.Type.STRING, 50);
    output.writeString(this.url);
    output.writeFieldEnd();
  }
  if (this.location !== null && this.location !== undefined) {
    output.writeFieldBegin('location', Thrift.Type.STRING, 51);
    output.writeString(this.location);
    output.writeFieldEnd();
  }
  if (this.signature !== null && this.signature !== undefined) {
    output.writeFieldBegin('signature', Thrift.Type.STRING, 52);
    output.writeString(this.signature);
    output.writeFieldEnd();
  }
  if (this.profile !== null && this.profile !== undefined) {
    output.writeFieldBegin('profile', Thrift.Type.STRING, 53);
    output.writeString(this.profile);
    output.writeFieldEnd();
  }
  if (this.weibo !== null && this.weibo !== undefined) {
    output.writeFieldBegin('weibo', Thrift.Type.STRING, 54);
    output.writeString(this.weibo);
    output.writeFieldEnd();
  }
  if (this.avatar !== null && this.avatar !== undefined) {
    output.writeFieldBegin('avatar', Thrift.Type.STRING, 55);
    output.writeString(this.avatar);
    output.writeFieldEnd();
  }
  if (this.githubId !== null && this.githubId !== undefined) {
    output.writeFieldBegin('githubId', Thrift.Type.STRING, 56);
    output.writeString(this.githubId);
    output.writeFieldEnd();
  }
  if (this.active !== null && this.active !== undefined) {
    output.writeFieldBegin('active', Thrift.Type.BOOL, 57);
    output.writeBool(this.active);
    output.writeFieldEnd();
  }
  if (this.githubUsername !== null && this.githubUsername !== undefined) {
    output.writeFieldBegin('githubUsername', Thrift.Type.STRING, 58);
    output.writeString(this.githubUsername);
    output.writeFieldEnd();
  }
  if (this.follower_count !== null && this.follower_count !== undefined) {
    output.writeFieldBegin('follower_count', Thrift.Type.I32, 59);
    output.writeI32(this.follower_count);
    output.writeFieldEnd();
  }
  if (this.following_count !== null && this.following_count !== undefined) {
    output.writeFieldBegin('following_count', Thrift.Type.I32, 60);
    output.writeI32(this.following_count);
    output.writeFieldEnd();
  }
  if (this.collect_tag_count !== null && this.collect_tag_count !== undefined) {
    output.writeFieldBegin('collect_tag_count', Thrift.Type.I32, 61);
    output.writeI32(this.collect_tag_count);
    output.writeFieldEnd();
  }
  if (this.collect_topic_count !== null && this.collect_topic_count !== undefined) {
    output.writeFieldBegin('collect_topic_count', Thrift.Type.I32, 62);
    output.writeI32(this.collect_topic_count);
    output.writeFieldEnd();
  }
  if (this.receive_reply_mail !== null && this.receive_reply_mail !== undefined) {
    output.writeFieldBegin('receive_reply_mail', Thrift.Type.BOOL, 63);
    output.writeBool(this.receive_reply_mail);
    output.writeFieldEnd();
  }
  if (this.receive_at_mail !== null && this.receive_at_mail !== undefined) {
    output.writeFieldBegin('receive_at_mail', Thrift.Type.BOOL, 64);
    output.writeBool(this.receive_at_mail);
    output.writeFieldEnd();
  }
  if (this.from_wp !== null && this.from_wp !== undefined) {
    output.writeFieldBegin('from_wp', Thrift.Type.BOOL, 65);
    output.writeBool(this.from_wp);
    output.writeFieldEnd();
  }
  if (this.retrieve_time !== null && this.retrieve_time !== undefined) {
    output.writeFieldBegin('retrieve_time', Thrift.Type.I32, 66);
    output.writeI32(this.retrieve_time);
    output.writeFieldEnd();
  }
  if (this.retrieve_key !== null && this.retrieve_key !== undefined) {
    output.writeFieldBegin('retrieve_key', Thrift.Type.STRING, 67);
    output.writeString(this.retrieve_key);
    output.writeFieldEnd();
  }
  if (this.vip_type !== null && this.vip_type !== undefined) {
    output.writeFieldBegin('vip_type', Thrift.Type.I32, 68);
    output.writeI32(this.vip_type);
    output.writeFieldEnd();
  }
  if (this.vip_create_time !== null && this.vip_create_time !== undefined) {
    output.writeFieldBegin('vip_create_time', Thrift.Type.I64, 69);
    output.writeI64(this.vip_create_time);
    output.writeFieldEnd();
  }
  if (this.vip_expire_time !== null && this.vip_expire_time !== undefined) {
    output.writeFieldBegin('vip_expire_time', Thrift.Type.I64, 70);
    output.writeI64(this.vip_expire_time);
    output.writeFieldEnd();
  }
  if (this.operate_type !== null && this.operate_type !== undefined) {
    output.writeFieldBegin('operate_type', Thrift.Type.I32, 71);
    output.writeI32(this.operate_type);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

